/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.duan1.ui;

import com.duan1.DAO.PhieuMuonDAO;
import com.duan1.DAO.SinhVienDAO;
import com.duan1.entity.PhieuMuon;
import com.duan1.helper.Auth;
import com.duan1.helper.DateHelper;
import com.duan1.helper.MsgBox;
import java.util.List;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class PhieuMuonJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PhieuMuonJPanel
     */
    public PhieuMuonJPanel() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        tabs = new javax.swing.JTabbedPane();
        pnlPhieuMuon = new javax.swing.JPanel();
        pnlThongTin = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblMaPM = new javax.swing.JLabel();
        lblMaSV = new javax.swing.JLabel();
        lblNM = new javax.swing.JLabel();
        lblNT = new javax.swing.JLabel();
        lblNguoiTao = new javax.swing.JLabel();
        lblTT = new javax.swing.JLabel();
        lblGhiChu = new javax.swing.JLabel();
        txtMaPM = new javax.swing.JTextField();
        txtMaSV = new javax.swing.JTextField();
        txtNguoiTao = new javax.swing.JTextField();
        cboTrangThai = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        txtNgayMuon = new com.toedter.calendar.JDateChooser();
        txtNgayTra = new com.toedter.calendar.JDateChooser();
        jPanel5 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnMoi = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        btnFirst = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        btnCTPM = new javax.swing.JButton();
        btnMail = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTable = new javax.swing.JTable();
        rdoTC = new javax.swing.JRadioButton();
        rdoDT = new javax.swing.JRadioButton();
        rdoCT = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        txtTimSV = new javax.swing.JTextField();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setPreferredSize(new java.awt.Dimension(657, 478));

        pnlThongTin.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        lblMaPM.setText("Mã PM:");

        lblMaSV.setText("Mã SV:");

        lblNM.setText("Ngày mượn:");

        lblNT.setText("Ngày trả:");

        lblNguoiTao.setText("Người tạo:");

        lblTT.setText("Trạng thái:");

        lblGhiChu.setText("Ghi chú:");

        cboTrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Đã trả", "Chưa trả", " " }));

        txtGhiChu.setColumns(20);
        txtGhiChu.setRows(5);
        jScrollPane1.setViewportView(txtGhiChu);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMaPM)
                    .addComponent(lblMaSV)
                    .addComponent(lblNM)
                    .addComponent(lblNT)
                    .addComponent(lblNguoiTao)
                    .addComponent(lblTT)
                    .addComponent(lblGhiChu))
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMaPM)
                    .addComponent(txtMaSV)
                    .addComponent(txtNguoiTao)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                    .addComponent(cboTrangThai, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtNgayTra, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtNgayMuon, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaPM)
                    .addComponent(txtMaPM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaSV)
                    .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNM)
                    .addComponent(txtNgayMuon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNgayTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNguoiTao)
                    .addComponent(txtNguoiTao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTT)
                    .addComponent(cboTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblGhiChu)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(3, 3, 3))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Chức năng"));

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel5.add(btnThem);

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel5.add(btnSua);

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel5.add(btnXoa);

        btnMoi.setText("Mới");
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });
        jPanel5.add(btnMoi);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Điều khiển"));

        btnFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/duan1/icon/first.png"))); // NOI18N
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });
        jPanel7.add(btnFirst);

        btnPrev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/duan1/icon/prev.png"))); // NOI18N
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });
        jPanel7.add(btnPrev);

        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/duan1/icon/next.png"))); // NOI18N
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });
        jPanel7.add(btnNext);

        btnLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/duan1/icon/last.png"))); // NOI18N
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });
        jPanel7.add(btnLast);

        btnCTPM.setText("CTPM");
        btnCTPM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCTPMActionPerformed(evt);
            }
        });

        btnMail.setText("gửi mail");
        btnMail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMailActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlThongTinLayout = new javax.swing.GroupLayout(pnlThongTin);
        pnlThongTin.setLayout(pnlThongTinLayout);
        pnlThongTinLayout.setHorizontalGroup(
            pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongTinLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThongTinLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(2, 2, 2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlThongTinLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnMail)
                        .addGap(18, 18, 18)
                        .addComponent(btnCTPM)
                        .addContainerGap())))
        );
        pnlThongTinLayout.setVerticalGroup(
            pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlThongTinLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCTPM)
                    .addComponent(btnMail))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh sách"));

        tblTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "MaPM", "MaSV", "Ngày mượn", "Ngày trả", "MaND", "Trạng thái", "Ghi chú", "Gửi mail"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        buttonGroup1.add(rdoTC);
        rdoTC.setSelected(true);
        rdoTC.setText("Tất cả");
        rdoTC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoTCActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoDT);
        rdoDT.setText("Đã trả");
        rdoDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoDTActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoCT);
        rdoCT.setText("Chưa trả");
        rdoCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoCTActionPerformed(evt);
            }
        });

        jLabel8.setText("Tìm SV:");

        txtTimSV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTimSVKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout pnlPhieuMuonLayout = new javax.swing.GroupLayout(pnlPhieuMuon);
        pnlPhieuMuon.setLayout(pnlPhieuMuonLayout);
        pnlPhieuMuonLayout.setHorizontalGroup(
            pnlPhieuMuonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlThongTin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlPhieuMuonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdoTC)
                .addGap(18, 18, 18)
                .addComponent(rdoDT)
                .addGap(18, 18, 18)
                .addComponent(rdoCT)
                .addGap(54, 54, 54)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTimSV)
                .addContainerGap())
        );
        pnlPhieuMuonLayout.setVerticalGroup(
            pnlPhieuMuonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPhieuMuonLayout.createSequentialGroup()
                .addComponent(pnlThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPhieuMuonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoTC)
                    .addComponent(rdoDT)
                    .addComponent(rdoCT)
                    .addComponent(jLabel8)
                    .addComponent(txtTimSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabs.addTab("Phiếu mượn", pnlPhieuMuon);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTableMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            this.row = tblTable.getSelectedRow();
            this.edit();
        }
    }//GEN-LAST:event_tblTableMouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        this.insert();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        this.update();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        this.delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        // TODO add your handling code here:
        this.clearForm();
    }//GEN-LAST:event_btnMoiActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        // TODO add your handling code here:
        this.first();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        // TODO add your handling code here:
        this.prev();
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        this.next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        // TODO add your handling code here:
        this.last();
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnCTPMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCTPMActionPerformed
        // TODO add your handling code here:
        JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
        CTPMJDialog open = new CTPMJDialog(frame, true);
        open.setLocationRelativeTo(null);
        open.setVisible(true);
    }//GEN-LAST:event_btnCTPMActionPerformed

    private void rdoTCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoTCActionPerformed
        // TODO add your handling code here:
        this.fillTable();
    }//GEN-LAST:event_rdoTCActionPerformed

    private void rdoDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoDTActionPerformed
        // TODO add your handling code here:
        this.fillTableDT();
    }//GEN-LAST:event_rdoDTActionPerformed

    private void rdoCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoCTActionPerformed
        // TODO add your handling code here:
        this.fillTableCT();
    }//GEN-LAST:event_rdoCTActionPerformed

    private void btnMailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMailActionPerformed
        // TODO add your handling code here:
        this.tinhHinhPM();
    }//GEN-LAST:event_btnMailActionPerformed

    private void txtTimSVKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimSVKeyPressed
        // TODO add your handling code here:
        this.fillTable();
        this.fillTableDT();
        this.fillTableCT();
    }//GEN-LAST:event_txtTimSVKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCTPM;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnMail;
    private javax.swing.JButton btnMoi;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cboTrangThai;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblGhiChu;
    private javax.swing.JLabel lblMaPM;
    private javax.swing.JLabel lblMaSV;
    private javax.swing.JLabel lblNM;
    private javax.swing.JLabel lblNT;
    private javax.swing.JLabel lblNguoiTao;
    private javax.swing.JLabel lblTT;
    private javax.swing.JPanel pnlPhieuMuon;
    private javax.swing.JPanel pnlThongTin;
    private javax.swing.JRadioButton rdoCT;
    private javax.swing.JRadioButton rdoDT;
    private javax.swing.JRadioButton rdoTC;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblTable;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtMaPM;
    private javax.swing.JTextField txtMaSV;
    private com.toedter.calendar.JDateChooser txtNgayMuon;
    private com.toedter.calendar.JDateChooser txtNgayTra;
    private javax.swing.JTextField txtNguoiTao;
    private javax.swing.JTextField txtTimSV;
    // End of variables declaration//GEN-END:variables
    PhieuMuonDAO dao = new PhieuMuonDAO();
    SinhVienDAO svdao = new SinhVienDAO();

    int row = -1;

    void init() {
        fillTable();
//        txtNgayMuon.setEnabled(false);
    }

    void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblTable.getModel();
        model.setRowCount(0);
        try {
            String keywork = txtTimSV.getText();
            List<PhieuMuon> list = dao.selectByKeyword(keywork);
            for (PhieuMuon pm : list) {
                Object[] row = {
                    pm.getMaPM(),
                    pm.getMaSV(),
                    DateHelper.toString(pm.getNgayMuon()),
                    DateHelper.toString(pm.getNgayTra()),
                    pm.getMaND(),
                    pm.getTrangThai(),
                    pm.getGhiChu(),
                    false
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
        }
    }

    void fillTableDT() {
        DefaultTableModel model = (DefaultTableModel) tblTable.getModel();
        model.setRowCount(0);
        try {
            String keywork = txtTimSV.getText();
            List<PhieuMuon> list = dao.selectByKeyword(keywork);
            for (PhieuMuon pm : list) {
                Object[] row = {
                    pm.getMaPM(),
                    pm.getMaSV(),
                    DateHelper.toString(pm.getNgayMuon()),
                    DateHelper.toString(pm.getNgayTra()),
                    pm.getMaND(),
                    pm.getTrangThai(),
                    pm.getGhiChu(),
                    false
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
        }
    }

    void fillTableCT() {
        DefaultTableModel model = (DefaultTableModel) tblTable.getModel();
        model.setRowCount(0);
        try {
            String keywork = txtTimSV.getText();
            List<PhieuMuon> list = dao.selectByKeyword(keywork);
            for (PhieuMuon pm : list) {
                Object[] row = {
                    pm.getMaPM(),
                    pm.getMaSV(),
                    DateHelper.toString(pm.getNgayMuon()),
                    DateHelper.toString(pm.getNgayTra()),
                    pm.getMaND(),
                    pm.getTrangThai(),
                    pm.getGhiChu(),
                    false
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
        }
    }

    PhieuMuon getForm() {
        PhieuMuon pm = new PhieuMuon();
        pm.setMaSV(txtMaSV.getText());
        pm.setNgayMuon(txtNgayMuon.getDate());
        pm.setNgayTra(txtNgayTra.getDate());
        pm.setMaND(Auth.user.getMaND());
        pm.setTrangThai(String.valueOf(cboTrangThai.getSelectedItem()));
        pm.setGhiChu(txtGhiChu.getText());
        return pm;
    }

    void setForm(PhieuMuon pm) {
        txtMaPM.setText(String.valueOf(pm.getMaPM()));
        txtMaSV.setText(pm.getMaSV());
        txtNgayMuon.setDate(pm.getNgayMuon());
        txtNgayTra.setDate(pm.getNgayTra());
        txtNguoiTao.setText(pm.getMaND());
        cboTrangThai.setSelectedItem(pm.getTrangThai());
        txtGhiChu.setText(pm.getGhiChu());
    }

    void edit() {
        int mapm = (Integer) tblTable.getValueAt(this.row, 0);
        PhieuMuon pm = dao.selectByID(mapm);
        this.setForm(pm);
        this.updateStatus();
    }

    void updateStatus() {
        boolean edit = (this.row >= 0);
        boolean first = (this.row == 0);
        boolean last = (this.row == tblTable.getRowCount() - 1);
//        txtMaTG.setEnabled(!edit);
        txtMaPM.setEnabled(false);
        txtNguoiTao.setEnabled(false);
        btnThem.setEnabled(!edit);
        btnXoa.setEnabled(edit);
        btnSua.setEnabled(edit);
        btnFirst.setEnabled(edit && !first);
        btnPrev.setEnabled(edit && !first);
        btnNext.setEnabled(edit && !last);
        btnLast.setEnabled(edit && !last);
    }

    void clearForm() {
        PhieuMuon pm = new PhieuMuon();
        pm.setMaND(Auth.user.getMaND());
        pm.setNgayTra(DateHelper.now());
        pm.setNgayMuon(DateHelper.now());
        this.setForm(pm);
        this.row = -1;
        this.updateStatus();
    }

    void insert() {
        PhieuMuon pm = getForm();
        try {
            dao.insert(pm);
            this.fillTable();
            this.clearForm();
            MsgBox.alert(this, "Thêm mới thành công !");
        } catch (Exception e) {
            System.out.println(e);
            MsgBox.alert(this, "Thêm mới thất bại !");
        }
    }

    void update() {
        PhieuMuon pm = getForm();
        try {
            pm.setMaPM(Integer.parseInt(txtMaPM.getText()));
            dao.update(pm);
            this.fillTable();
            MsgBox.alert(this, "Cập nhập thành công !");
        } catch (Exception e) {
            MsgBox.alert(this, "Cập nhập thất bại !");
        }
    }

    void delete() {
        PhieuMuon pm = getForm();
        if (!Auth.isManager()) {
            MsgBox.alert(this, "Bạn không có quyền xóa khóa học !");
        } else {
            MsgBox.confirm(this, "Bạn thật sự muốn xóa khóa học này ? ");
            int mapm = Integer.parseInt(txtMaPM.getText());
            try {
                pm.setMaPM(Integer.parseInt(txtMaPM.getText()));
                dao.delete(mapm);
                this.fillTable();
                this.clearForm();
                MsgBox.alert(this, "Xóa thành công !");
            } catch (Exception e) {
                MsgBox.alert(this, "Xóa thất bại !");
            }
        }
    }

    void first() {
        this.row = 0;
        this.edit();
    }

    void prev() {
        if (this.row > 0) {
            this.row--;
            this.edit();
        }
    }

    void next() {
        if (this.row < tblTable.getRowCount() - 1);
        this.row++;
        this.edit();
    }

    void last() {
        this.row = tblTable.getRowCount() - 1;
        this.edit();
    }

//    void guimail() {
//        int n = tblTable.getRowCount();
//        for (int i = 0; i < n; i++) {
//            int mapm = (Integer) tblTable.getValueAt(i, 0);
//            Boolean mail = (Boolean) tblTable.getValueAt(i, 7);
//            PhieuMuon pm = dao.selectByID(mapm);
//            dao.update(pm);
//
//        }
//        tinhHinhPM();
////        MsgBox.alert(this, "Đang gửi Email đến các sinh viên !!!");
//    }


    void tinhHinhPM() {
        String username = "buibao113cb@gmail.com";
        String password = "bao291101.";
        Properties prop = new Properties();
        prop.put("mail.smtp.host", "smtp.gmail.com");
        prop.put("mail.smtp.port", "587");
        prop.put("mail.smtp.auth", "true");
        prop.put("mail.smtp.starttls.enable", "true"); //TLS

        Session session = Session.getInstance(prop,
                new javax.mail.Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(username, password);
            }
        });
        int n = tblTable.getRowCount();
        for (int i = 0; i < n; i++) {
            int mapm = (Integer) tblTable.getValueAt(i, 0);
            Boolean mail = (Boolean) tblTable.getValueAt(i, 7);
            PhieuMuon pm = dao.selectByID(mapm);
            if (mail == true) {
                String email = svdao.selectByID(pm.getMaSV()).getEmail();
                String ten = svdao.selectByID(pm.getMaSV()).getHoTen();
//                System.out.println(mapm);
//                System.out.println(email);
                try {
                    Message message = new MimeMessage(session);
                    message.setFrom(new InternetAddress("from@gmail.com"));
                    message.setRecipients(
                            Message.RecipientType.TO,
                            InternetAddress.parse(email)
                    );
                    message.setSubject("Thông báo quá hạn");
                    message.setText("Chào bạn: " + ten + "\n"
                            + "Phòng đào tạo FPT xin thông báo\n"
                            + "Ngày mượn của bạn : " + tblTable.getValueAt(i, 3) + "\n"
                            + "Hôm nay đã quá hạn mượn, bạn vui lòng đem trả lại sách \n"
                            + "Nếu không bạn sẽ bị cấm đến thư viện \n"
                            + "Chúc bạn một ngày tốt lành !");
                    Transport.send(message);

                } catch (MessagingException e) {
                    
                    e.printStackTrace();
                }
                MsgBox.alert(this, "Đã thông báo vào Email của sinh viên !");
            }
        }

    }
}
